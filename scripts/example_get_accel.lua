-- https://learnxinyminutes.com/docs/ru-ru/lua-ru/ ссылка для быстрого ознакомления с основами языка LUA
-- задаем количество RGB светодиодов (на базовой плате пионера их 4)
local ledNumber = 4
-- инициализируем управление RGB светодиодами
local leds = Ledbar.new(ledNumber)

-- обязательная функция обработки событий
function callback(event)
end

-- функция считывания данных с акселерометра и вывода их на светодиоды
function accel()
    -- считываем данные с акселерометра 
    ax, ay, az = Sensors.accel()
    -- берем модули этих значений
    ax, ay, az = math.abs(ax), math.abs(ay), math.abs(az)
    -- выводим ускорение по оси x на 1-й светодиод с помощью уровня интенсивности зеленого цвета
    leds:set(0, 0, ax % 10 / 10, 0)
    -- выводим ускорение по оси z на 2-й и 3-й светодиоды с помощью уровня интенсивности фиолетового цвета
    leds:set(1, az % 10 / 10, 0, az % 10 / 10)
    leds:set(2, az % 10 / 10, 0, az % 10 / 10)
    -- выводим ускорение по оси y на 4-й светодиод  помощью уровня интенсивности синего цвета
    leds:set(3, 0, 0, ay % 10 / 10)
    --[[ учитывается ускорение свободного падения, поэтому в статичном положении светодиоды оси z горят, а при свободном падении перестанут, 
    также при повороте коптера на 90 градусов, ускорение свободного падения будет проецироваться на другую локальную ось пионера, 
    поэтому при вращении его по оси x или y, интенсивность соответствующего светодиода растет, независимо от движения коптера ]]
end

-- создаем таймер, который будет вызывать нашу функцию каждую 0.1 с
getAccel = Timer.new(0.1, function () accel() end)
-- запускаем наш таймер
getAccel:start()
